{
  "name": "cacheman-memory",
  "version": "0.1.2",
  "description": "In-memory caching library for Node.JS and also cache engine for cacheman",
  "author": {
    "name": "Jonathan Brumley",
    "email": "cayasso@gmail.com"
  },
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cayasso/cacheman-memory.git"
  },
  "keywords": [
    "cache",
    "memory",
    "caching",
    "store",
    "ttl",
    "cacheman"
  ],
  "license": "MIT",
  "devDependencies": {
    "mocha": "*"
  },
  "dependencies": {
    "lru-cache": "~2.3.x"
  },
  "readme": "# cacheman-memory\n\n[![Build Status](https://travis-ci.org/cayasso/cacheman-memory.png?branch=master)](https://travis-ci.org/cayasso/cacheman-memory)\n[![NPM version](https://badge.fury.io/js/cacheman-memory.png)](http://badge.fury.io/js/cacheman-memory)\n\nIn-memory caching library for Node.JS and also cache engine for [cacheman](https://github.com/cayasso/cacheman).\n\n## Instalation\n\n``` bash\n$ npm install cacheman-memory\n```\n\n## Usage\n\n```javascript\nvar CachemanMemory = require('cacheman-memory');\nvar cache = new CachemanMemory();\n\n// set the value\ncache.set('my key', { foo: 'bar' }, function (error) {\n\n  if (error) throw error;\n\n  // get the value\n  cache.get('my key', function (error, value) {\n\n    if (error) throw error;\n\n    console.log(value); //-> {foo:\"bar\"}\n\n    // delete entry\n    cache.del('my key', function (error){\n      \n      if (error) throw error;\n\n      console.log('value deleted');\n    });\n\n  });\n});\n```\n\n## API\n\n### CachemanMemory()\n\nCreate `cacheman-memory` instance.\n\n```javascript\nvar cache = new CachemanMemory();\n```\n\n### cache.set(key, value, [ttl, [fn]])\n\nStores or updates a value.\n\n```javascript\ncache.set('foo', { a: 'bar' }, function (err, value) {\n  if (err) throw err;\n  console.log(value); //-> {a:'bar'}\n});\n```\n\nOr add a TTL(Time To Live) in seconds like this:\n\n```javascript\n// key will expire in 60 seconds\ncache.set('foo', { a: 'bar' }, 60, function (err, value) {\n  if (err) throw err;\n  console.log(value); //-> {a:'bar'}\n});\n```\n\n### cache.get(key, fn)\n\nRetrieves a value for a given key, if there is no value for the given key a null value will be returned.\n\n```javascript\ncache.get(function (err, value) {\n  if (err) throw err;\n  console.log(value);\n});\n```\n\n### cache.del(key, [fn])\n\nDeletes a key out of the cache.\n\n```javascript\ncache.del('foo', function (err) {\n  if (err) throw err;\n  // foo was deleted\n});\n```\n\n### cache.clear([fn])\n\nClear the cache entirely, throwing away all values.\n\n```javascript\ncache.clear(function (err) {\n  if (err) throw err;\n  // cache is now clear\n});\n```\n\n## Run tests\n\n``` bash\n$ make test\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 Jonathan Brumley &lt;cayasso@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cayasso/cacheman-memory/issues"
  },
  "homepage": "https://github.com/cayasso/cacheman-memory",
  "_id": "cacheman-memory@0.1.2",
  "dist": {
    "shasum": "8c33ed4016272183d260c7866945a128dcab4803"
  },
  "_from": "cacheman-memory@~0.1.x",
  "_resolved": "https://registry.npmjs.org/cacheman-memory/-/cacheman-memory-0.1.2.tgz"
}
